<?xml version="1.0" encoding="utf-8"?>
<!--
version
本服务可用版本号规则来缓存数据，版本的过期时间则以version节点来描述
可应用于多个模块用同一数据的情况，如：  多个模块使用了推荐数据，而推荐数据有修改则使缓存失效， 不用于删除每一个缓存点，此种情况则可使用版本来处理

示例：
<version name="groupA" expires="20">
<version name="groupB" expires="30">
<version name="module1" expires="5">
<version name="module2" expires="6">
-->
<!--
command  
该节点用于配置每个命令的缓存参数

expires:   seconds, 缓存过期时间
  子项中的配置可忽略，忽略后以上级配置为准

version:
  以版本形式缓存数据时指定版本名称，需通过version标签提前设置version过期时间， 非版本缓存时可忽略

节点中的删除子节点(delete)：
parameters:  
  删除所使用的参数值列表,以逗号分隔(注意：此参数非被删除命令的参数，应为删除命令本身的参数)
separator:
  参数分隔符,默认为半角逗号(,),在多个参数时将以此分隔符分隔
key:
  自定义缓存键，若配置此属性则将以此键做为缓存名称，可使用以大括号括起来的参数与其串联，如： GetUserById(int userId), 则可以使用：  User-{userId} ,其中{userId} 即为参数项,字符区别大小写


特别说明：
  若命令输入参数非值类型则不可缓存，需要自行处理， 可通地 CacheManager 获取相应的缓存管理器

示例：
<command name="GetTime" expires="5" mode="general">
  删除OtherServer下的GetTime删除缓存配置，并以本命令索引为0的参数做为删除项
  <delete name="GetTime" server="OtherServer" parameters="0" />
  删除本服务下的GetTime删除缓存配置，并以本命令索引为0的参数做为删除项
  server: 省略后以本服务为准
  <delete name="GetTime" parameters="0" />
  以自定义删除项删除本服务下的GetTime删除缓存配置(需应用支持)
  <delete name="GetTime" />
</command>
-->
<cs expires="30">

  <!-- 版本的过期时间 --><!--
  <version name="groupA" expires="3600" />
  -->
  
  <command name="GetTime" expires="5" object="" />
  <command name="GetArray" expires="5" />
  <!--<command name="GetTime" expires="5" mode="match" />-->
  <command name="ModifyGetTime" expires="5" >
    <delete name="GetTime" />
  </command>
  
</cs>